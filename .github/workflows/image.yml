name: build our images

on:
  push:
    branches: main
  workflow_dispatch:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: install buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      - name: build the images
        run: |
          LATEST_COMMIT=$(git log | grep ^commit | head -n 1 | awk '{ print $2 }')
          PREVIOUS_COMMIT=$(git log | grep ^commit | head -n 2 | tail -n 1 | awk '{ print $2 }')

          CHANGES=$(git diff ${LATEST_COMMIT}..${PREVIOUS_COMMIT} | grep ^diff | awk '{ print $3 }' | sed 's/\// /g' | awk '{ print $2 }' | sort | uniq )
          BASE_DIR=${PWD};
          for repo in $CHANGES
          do
            cd ${BASE_DIR}/$repo;
            docker buildx build \
              --tag commnerd/${dir}:latest \
              --platform linux/amd64,linux/arm/v7,linux/arm64 .
          done
      - name: login to docker hub
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login --username '${{ secrets.DOCKER_USERNAME }}' --password-stdin
      - name: build and push images
        run: |
          LATEST_COMMIT=$(git log | grep ^commit | head -n 1 | awk '{ print $2 }')
          PREVIOUS_COMMIT=$(git log | grep ^commit | head -n 2 | tail -n 1 | awk '{ print $2 }')

          CHANGES=$(git diff ${LATEST_COMMIT}..${PREVIOUS_COMMIT} | grep ^diff | awk '{ print $3 }' | sed 's/\// /g' | awk '{ print $2 }' | sort | uniq )
          for repo in $CHANGES
          do
              docker buildx push commnerd/$repo:latest
          done
